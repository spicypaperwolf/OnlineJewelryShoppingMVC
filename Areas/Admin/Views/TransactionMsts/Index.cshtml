@using PagedList;
@using PagedList.Mvc;
@model IPagedList<OnlineJewelryShoppingMVC.TransactionMst>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_admin.cshtml";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="content">
    <p>
        <a class="btn btn-primary" href="@Url.Action("Create","TransactionMsts")">
            Create
        </a>
    </p>
    @using (Html.BeginForm("Index", "TransactionMsts", FormMethod.Post))
    {
        <div style="padding-bottom: 2%;">
            Search: @Html.TextBox("searchString")
            <input id="Submit1" type="submit" value="Search" class="btn btn-success" />
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title"> TRANSACTION TABLE</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead class=" text-primary">
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().transactionId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().userId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().totQty)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().totPrice)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().approvalStt)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.transactionId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.userId)
                                        </td>
                                        
                                        <td>
                                            @Html.DisplayFor(modelItem => item.totQty)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.totPrice)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.approvalStt)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.transactionId }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.transactionId }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.transactionId })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded }
    )
</div>

